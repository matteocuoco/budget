{"version":3,"sources":["navbar.js","store.js","budget/InputBudget.js","budget/InputExpenses.js","display/BalanceDisplay.js","display/ExpensesList.js","display/DisplayBudget.js","budget/Budget.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Component","BudgetContext","React","createContext","reducer","state","action","type","Object","objectSpread","budget","expenses","BudgetProvider","dispatch","_this","setState","Provider","value","this","props","children","BudgetConsumer","Consumer","InputBudget","handleInput","e","target","handleSubmit","preventDefault","_this2","onChange","onClick","bind","InputExpenses","expenseTitle","amount","defineProperty","name","addExpenses","concat","toConsumableArray","title","onSubmit","BalanceDisplay","totalExpenses","length","reduce","acc","curr","parseInt","ExpensesList","expensesList","map","expense","index","key","DisplayBudget","display_BalanceDisplay","display_ExpensesList","Budget","budget_InputBudget","budget_InputExpenses","display_DisplayBudget","App","navbar","budget_Budget","Boolean","window","location","hostname","match","ReactDOM","render","store_BudgetProvider","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19d995ee.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar navbar-light bg-dark\">\r\n                <div className=\"container\"> \r\n                    <h2 className=\"text-white\">Budget Tracker App</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react';\r\n\r\nconst BudgetContext = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"ADD_BUDGET\" :\r\n        return {\r\n            ...state,\r\n            budget: action.budget\r\n        };\r\n        case \"ADD_EXPENSES\" :\r\n        return {\r\n            ...state,\r\n            expenses: action.expenses\r\n        };\r\n        default :\r\n        return state\r\n    }\r\n}\r\n\r\nclass BudgetProvider extends Component {\r\n    \r\nstate = {\r\n    budget: '',\r\n    expenses: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n}\r\n\r\n    render () {\r\n        return (\r\n            <BudgetContext.Provider value={this.state}>\r\n                {this.props.children}\r\n            </BudgetContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst BudgetConsumer = BudgetContext.Consumer;\r\n\r\nexport { BudgetProvider, BudgetConsumer }","import React, {Component} from 'react';\r\nimport { BudgetConsumer } from '../store';\r\n\r\nclass InputBudget extends Component {\r\n\r\n    state = {\r\n        budget: ''\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            budget: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (dispatch, e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: \"ADD_BUDGET\",\r\n            budget: this.state.budget\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <BudgetConsumer>\r\n                {value =>{\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <label>Your Budget</label>\r\n                            <form className=\"form-inline\">\r\n                                <input\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.budget}\r\n                                    className=\"form-control mr-2 mb-2\"\r\n                                    type=\"number\"\r\n                                />\r\n                                <button onClick={this.handleSubmit.bind(this, dispatch)} className=\"btn btn-dark\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </BudgetConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputBudget","import React, { Component } from 'react';\r\nimport { BudgetConsumer } from '../store';\r\n\r\nclass InputExpenses extends Component {\r\n\r\n    state = {\r\n        expenses: [],\r\n        expenseTitle: '',\r\n        amount: ''\r\n    }\r\n\r\n    handleInput = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (dispatch, e) => {\r\n        e.preventDefault()\r\n        dispatch({\r\n            type: \"ADD_EXPENSES\",\r\n            expenses: this.state.expenses\r\n        })\r\n    }\r\n\r\n    addExpenses = () => {\r\n        this.setState({\r\n            expenses: [\r\n                ...this.state.expenses,\r\n                { title: this.state.expenseTitle, amount: this.state.amount }\r\n            ],\r\n            expenseTitle: '',\r\n            amount: ''\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <BudgetConsumer>\r\n                {value => {\r\n                    const { dispatch } = value\r\n                    return (\r\n                        <div className=\"card card-body\">\r\n                            <form onSubmit={this.handleSubmit.bind(this, dispatch)}>\r\n                                <label>Expenses</label>\r\n                                <input\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.expenseTitle}\r\n                                    className=\"form-control mb-2\"\r\n                                    name=\"expenseTitle\"\r\n                                />\r\n                                <label>Amount</label>\r\n                                <input\r\n                                    onChange={this.handleInput}\r\n                                    value={this.state.amount}\r\n                                    className=\"form-control mb-2\"\r\n                                    name=\"amount\"\r\n                                />\r\n                                <button onClick={this.addExpenses} className=\"btn btn-dark btn-block\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </BudgetConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InputExpenses","import React from 'react';\r\nimport { BudgetConsumer } from '../store';\r\n\r\nconst BalanceDisplay = () => {\r\n    return (\r\n        <BudgetConsumer>\r\n            {value => {\r\n                const totalExpenses = value.expenses.length > 0 ? (\r\n                    value.expenses.reduce((acc, curr) => {\r\n                        acc += parseInt(curr.amount)\r\n                        return acc\r\n                    }, 0)) : 0;\r\n\r\n                    return (\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">Budget</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"text-center card-title\">{value.budget}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">Expenses</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"text-center card-title\">{totalExpenses}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">Balance</div>\r\n                                    <div className=\"card-body\">\r\n                                        <h5 className=\"text-center card-title\">{value.budget - totalExpenses}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n            }}\r\n        </BudgetConsumer>\r\n    )\r\n}\r\n\r\nexport default BalanceDisplay\r\n","import React , { Component } from 'react';\r\nimport { BudgetConsumer } from '../store';\r\n\r\nclass ExpensesList extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"card mt-5\">\r\n                <table className=\"table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Amount</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <BudgetConsumer>\r\n                        { value => {\r\n                            const expensesList = value.expenses.length > 0 ? (\r\n                                value.expenses.map( (expense, index) => {\r\n                                    return (\r\n                                        <tr key={index}>\r\n                                            <td>{expense.title}</td>\r\n                                            <td>{expense.amount}</td>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            ) : (\r\n                                <tr>\r\n                                    <td>No Listed Expenses Yet</td>\r\n                                </tr>\r\n                            )\r\n                            return <tbody>{ expensesList }</tbody>\r\n                        }}\r\n                    </BudgetConsumer>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExpensesList","import React from 'react';\r\nimport BalanceDisplay from './BalanceDisplay'\r\nimport ExpensesList from './ExpensesList'\r\n\r\nconst DisplayBudget = () => {\r\n    return (\r\n        <div className=\"card card-body\">\r\n            <h3 className=\"text-center\">Your Budget Info</h3>\r\n            <BalanceDisplay />\r\n            <ExpensesList />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayBudget","import React from 'react';\r\nimport InputBudget from './InputBudget';\r\nimport InputExpenses from './InputExpenses';\r\nimport DisplayBudget from '../display/DisplayBudget'\r\n\r\nconst Budget = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-4\">\r\n                <InputBudget />\r\n                <InputExpenses />\r\n            </div>\r\n            <div className=\"col-lg-8\">\r\n                <DisplayBudget />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Budget","import React, { Component } from 'react';\nimport Navbar from './navbar';\nimport Budget from './budget/Budget';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"container my-5\">\n          <Budget />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BudgetProvider } from './store';\n\nReactDOM.render(\n    <BudgetProvider>\n        <App />\n    </BudgetProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}